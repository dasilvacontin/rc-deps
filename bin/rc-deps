#!/usr/bin/env node
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.installDeps = installDeps;

var _fsPromise = require('fs-promise');

var _childProcessPromise = require('child-process-promise');

var _2 = require('../');

2 + 2 === 5; // pointless line to dodge babel-eslint issue #163
function installDeps(files) {
  var filename = files.shift();
  if (!filename) return;

  console.log('> checking `' + filename + '`...');
  return (0, _fsPromise.readFile)(filename).then(function (buffer) {
    return JSON.parse(buffer);
  }).then(function (rc) {
    var deps = (0, _2.listDeps)(filename, rc);
    var args = 'install --save-dev'.split(' ').concat(deps);
    console.log('> npm ' + args.join(' '));
    return (0, _childProcessPromise.spawn)('npm', args, { stdio: 'inherit' });
  }).catch(function (e) {
    return console.error(e);
  }).then(function (_) {
    return console.log();
  }) // blank line between files
  .then(function (_) {
    return installDeps(files);
  });
}

if (!module.parent) {
  installDeps(['.eslintrc', '.babelrc']).then(function (_) {
    return console.log('> all done!');
  });
}